module.exports = { contents: "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Package = undefined;\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _semanticUiReact = require('semantic-ui-react');\n\nvar _reactRedux = require('react-redux');\n\nvar _reactWrappers = require('react-wrappers');\n\nvar _Dependencies = require('./Dependencies');\n\nvar _Dependencies2 = _interopRequireDefault(_Dependencies);\n\nvar _ErrorMessage = require('../../messages/ErrorMessage');\n\nvar _ErrorMessage2 = _interopRequireDefault(_ErrorMessage);\n\nvar _api = require('../../../state/api');\n\nvar _api2 = _interopRequireDefault(_api);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar _api$actions = _api2.default.actions,\n    loadPackageInfo = _api$actions.loadPackageInfo,\n    loadPackageInfoSuccess = _api$actions.loadPackageInfoSuccess;\nvar Package = exports.Package = function Package(_ref) {\n  var pkg = _ref.pkg,\n      deps = _ref.deps,\n      devDeps = _ref.devDeps,\n      timesLoaded = _ref.timesLoaded,\n      loadPackageInfo = _ref.loadPackageInfo;\n  return _react2.default.createElement(\n    'div',\n    { className: 'package-loader' },\n    _react2.default.createElement(\n      _semanticUiReact.Button,\n      { fluid: true, disabled: pkg.isLoading, onClick: loadPackageInfo, loading: pkg.isLoading },\n      deps && (0, _keys2.default)(deps).length ? 'Reload Package (loaded ' + timesLoaded + ' times)' : 'Load Package'\n    ),\n    deps && _react2.default.createElement(_Dependencies2.default, { deps: deps, devDeps: devDeps }),\n    pkg.error && _react2.default.createElement(\n      _ErrorMessage2.default,\n      null,\n      pkg.error\n    )\n  );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pkg: _api2.default.getPackage(state),\n    deps: _api2.default.getDependenciesAsArray(state),\n    devDeps: _api2.default.getDevDependenciesAsArray(state),\n    timesLoaded: _api2.default.getTimesLoaded(state)\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, {\n  loadPackageInfo: loadPackageInfo\n})((0, _reactWrappers.fromImmutable)(Package));\n\nexports.default = _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(loadPackageInfo, 'loadPackageInfo', 'unknown');\n  reactHotLoader.register(loadPackageInfoSuccess, 'loadPackageInfoSuccess', 'unknown');\n  reactHotLoader.register(Package, 'Package', 'unknown');\n  reactHotLoader.register(mapStateToProps, 'mapStateToProps', 'unknown');\n  reactHotLoader.register(_default, 'default', 'unknown');\n  leaveModule(module);\n})();\n\n;",
dependencies: ["babel-runtime/core-js/object/keys","react","semantic-ui-react","react-redux","react-wrappers","./Dependencies","../../messages/ErrorMessage","../../../state/api","react-hot-loader","react-hot-loader","react-hot-loader"],
sourceMap: "{\"version\":3,\"sources\":[\"/client/components/pages/Package/index.js\"],\"names\":[\"api\",\"actions\",\"loadPackageInfo\",\"loadPackageInfoSuccess\",\"Package\",\"pkg\",\"deps\",\"devDeps\",\"timesLoaded\",\"isLoading\",\"length\",\"error\",\"mapStateToProps\",\"getPackage\",\"state\",\"getDependenciesAsArray\",\"getDevDependenciesAsArray\",\"getTimesLoaded\"],\"mappings\":\";;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;mBAEoDA,cAAIC,O;IAAhDC,e,gBAAAA,e;IAAiBC,sB,gBAAAA,sB;AAElB,IAAMC,4BAAU,SAAVA,OAAU;AAAA,MAAGC,GAAH,QAAGA,GAAH;AAAA,MAAQC,IAAR,QAAQA,IAAR;AAAA,MAAcC,OAAd,QAAcA,OAAd;AAAA,MAAuBC,WAAvB,QAAuBA,WAAvB;AAAA,MAAoCN,eAApC,QAAoCA,eAApC;AAAA,SACrB;AAAA;AAAA,MAAK,WAAU,gBAAf;AACE;AAAC,6BAAD;AAAA,QAAQ,WAAR,EAAc,UAAUG,IAAII,SAA5B,EAAuC,SAASP,eAAhD,EAAiE,SAASG,IAAII,SAA9E;AACIH,cAAQ,oBAAYA,IAAZ,EAAkBI,MAA1B,+BAA6DF,WAA7D,eAAoF;AADxF,KADF;AAIIF,YAAQ,8BAAC,sBAAD,IAAc,MAAMA,IAApB,EAA0B,SAASC,OAAnC,GAJZ;AAKIF,QAAIM,KAAJ,IAAa;AAAC,4BAAD;AAAA;AAAgBN,UAAIM;AAApB;AALjB,GADqB;AAAA,CAAhB;;AASP,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCP,SAAKL,cAAIa,UAAJ,CAAeC,KAAf,CAD2B;AAEhCR,UAAMN,cAAIe,sBAAJ,CAA2BD,KAA3B,CAF0B;AAGhCP,aAASP,cAAIgB,yBAAJ,CAA8BF,KAA9B,CAHuB;AAIhCN,iBAAaR,cAAIiB,cAAJ,CAAmBH,KAAnB;AAJmB,GAAV;AAAA,CAAxB;;eAOe,yBAAQF,eAAR,EAAyB;AACtCV;AADsC,CAAzB,EAEZ,kCAAcE,OAAd,CAFY,C;;;;;;;;;;;;;;0BAlBPF,e;0BAAiBC,sB;0BAEZC,O;0BASPQ,e\",\"file\":\"client/components/pages/Package/index.js\",\"sourcesContent\":[\"import React from 'react'\\nimport { Button } from 'semantic-ui-react'\\nimport { connect } from 'react-redux'\\nimport { fromImmutable } from 'react-wrappers'\\nimport Dependencies from './Dependencies'\\nimport ErrorMessage from '../../messages/ErrorMessage'\\nimport api from '../../../state/api'\\n\\nconst { loadPackageInfo, loadPackageInfoSuccess } = api.actions\\n\\nexport const Package = ({ pkg, deps, devDeps, timesLoaded, loadPackageInfo }) =>\\n  <div className=\\\"package-loader\\\">\\n    <Button fluid disabled={pkg.isLoading} onClick={loadPackageInfo} loading={pkg.isLoading}>\\n      { deps && Object.keys(deps).length ? `Reload Package (loaded ${timesLoaded} times)` : 'Load Package' }\\n    </Button>\\n    { deps && <Dependencies deps={deps} devDeps={devDeps} /> }\\n    { pkg.error && <ErrorMessage>{ pkg.error }</ErrorMessage> }\\n  </div>\\n\\nconst mapStateToProps = state => ({\\n  pkg: api.getPackage(state),\\n  deps: api.getDependenciesAsArray(state),\\n  devDeps: api.getDevDependenciesAsArray(state),\\n  timesLoaded: api.getTimesLoaded(state),\\n})\\n\\nexport default connect(mapStateToProps, {\\n  loadPackageInfo\\n})(fromImmutable(Package))\\n\"]}",
headerContent: undefined,
mtime: 1529006313952,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
