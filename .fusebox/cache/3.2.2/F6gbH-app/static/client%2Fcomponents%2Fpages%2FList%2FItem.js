module.exports = { contents: "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _semanticUiReact = require('semantic-ui-react');\n\nvar _humanizeDuration = require('humanize-duration');\n\nvar _humanizeDuration2 = _interopRequireDefault(_humanizeDuration);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar _default = function _default(_ref) {\n  var item = _ref.item,\n      removeItem = _ref.removeItem,\n      toggleIsActive = _ref.toggleIsActive;\n\n  return _react2.default.createElement(\n    _semanticUiReact.Table.Row,\n    null,\n    _react2.default.createElement(\n      _semanticUiReact.Table.Cell,\n      { width: 1 },\n      _react2.default.createElement(_semanticUiReact.Button, {\n        circular: true,\n        icon: 'trash',\n        fluid: true, size: 'mini',\n        onClick: removeItem,\n        disabled: item.isActive\n      })\n    ),\n    _react2.default.createElement(\n      _semanticUiReact.Table.Cell,\n      { width: 1 },\n      item.id\n    ),\n    _react2.default.createElement(\n      _semanticUiReact.Table.Cell,\n      null,\n      item.name\n    ),\n    _react2.default.createElement(\n      _semanticUiReact.Table.Cell,\n      null,\n      'created ',\n      (0, _humanizeDuration2.default)(new Date() - item.date, { round: true }),\n      ' ago'\n    ),\n    _react2.default.createElement(\n      _semanticUiReact.Table.Cell,\n      { width: 1 },\n      _react2.default.createElement(_semanticUiReact.Checkbox, {\n        toggle: true,\n        checked: item.isActive,\n        onClick: toggleIsActive\n      })\n    )\n  );\n};\n\nexports.default = _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, 'default', 'unknown');\n  leaveModule(module);\n})();\n\n;",
dependencies: ["react","semantic-ui-react","humanize-duration","react-hot-loader","react-hot-loader","react-hot-loader"],
sourceMap: "{\"version\":3,\"sources\":[\"/client/components/pages/List/Item.js\"],\"names\":[\"item\",\"removeItem\",\"toggleIsActive\",\"isActive\",\"id\",\"name\",\"Date\",\"date\",\"round\"],\"mappings\":\";;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;eAEe,wBAA0C;AAAA,MAAvCA,IAAuC,QAAvCA,IAAuC;AAAA,MAAjCC,UAAiC,QAAjCA,UAAiC;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AACvD,SACE;AAAC,0BAAD,CAAO,GAAP;AAAA;AACE;AAAC,4BAAD,CAAO,IAAP;AAAA,QAAY,OAAO,CAAnB;AACE,oCAAC,uBAAD;AACE,sBADF;AAEE,cAAK,OAFP;AAGE,mBAHF,EAGQ,MAAK,MAHb;AAIE,iBAASD,UAJX;AAKE,kBAAUD,KAAKG;AALjB;AADF,KADF;AAUE;AAAC,4BAAD,CAAO,IAAP;AAAA,QAAY,OAAO,CAAnB;AAAwBH,WAAKI;AAA7B,KAVF;AAWE;AAAC,4BAAD,CAAO,IAAP;AAAA;AAAcJ,WAAKK;AAAnB,KAXF;AAYE;AAAC,4BAAD,CAAO,IAAP;AAAA;AAAA;AAAsB,sCAAS,IAAIC,IAAJ,KAAWN,KAAKO,IAAzB,EAA+B,EAAEC,OAAO,IAAT,EAA/B,CAAtB;AAAA;AAAA,KAZF;AAaE;AAAC,4BAAD,CAAO,IAAP;AAAA,QAAY,OAAO,CAAnB;AACE,oCAAC,yBAAD;AACE,oBADF;AAEE,iBAASR,KAAKG,QAFhB;AAGE,iBAASD;AAHX;AADF;AAbF,GADF;AAuBD,C\",\"file\":\"client/components/pages/List/Item.js\",\"sourcesContent\":[\"import React from 'react'\\nimport { Button, Icon, Table, Checkbox } from 'semantic-ui-react'\\nimport humanize from 'humanize-duration'\\n\\nexport default ({ item, removeItem, toggleIsActive }) => {\\n  return (\\n    <Table.Row>\\n      <Table.Cell width={1}>\\n        <Button\\n          circular\\n          icon=\\\"trash\\\"\\n          fluid size=\\\"mini\\\"\\n          onClick={removeItem}\\n          disabled={item.isActive}\\n          />\\n      </Table.Cell>\\n      <Table.Cell width={1}>{ item.id }</Table.Cell>\\n      <Table.Cell>{ item.name }</Table.Cell>\\n      <Table.Cell>created { humanize(new Date - item.date, { round: true }) } ago</Table.Cell>\\n      <Table.Cell width={1}>\\n        <Checkbox\\n          toggle\\n          checked={item.isActive}\\n          onClick={toggleIsActive}\\n          />\\n      </Table.Cell>\\n    </Table.Row>\\n  )\\n}\\n\\n\"]}",
headerContent: undefined,
mtime: 1529018172617,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
